apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "solr.start-config-map" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{ include "solr.labels" . | indent 4 | trim }}
data:
 startsolr.sh: |
   #!/bin/bash

   #prepare ZK path and copy solr.xml, security.json
   ( \
        /opt/solr/server/scripts/cloud-scripts/zkcli.sh -cmd ls ${ZKPATH}/solr.xml -zkhost ${ZK_HOST} > /dev/null 2>&1 \
        && \
        /opt/solr/server/scripts/cloud-scripts/zkcli.sh -cmd ls ${ZKPATH}/security.json -zkhost ${ZK_HOST} > /dev/null 2>&1 \
   ) \
   || \
   ( \
       # generate hash for security.json
       SALT=` < /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c32` \
       && \
       encHash=`echo -n $SALT$SOLR_PASSWORD | sha256sum \
       | cut -d" " -f1 | perl -e 'print pack "H*", <STDIN>' \
       | head --bytes -1 | sha256sum | cut -d" " -f1 \
       | perl -e 'print pack "H*", <STDIN>' | head --bytes -1 | base64` \
       && \
       encSalt=`echo -n "$SALT" | base64` \
       && \
       GENERATEDHASH=`printf "%s %s\n" $encHash $encSalt` \
       && \
       # Place the hash in security.json
       sed "s/GENERATEDHASH/$GENERATEDHASH/" /opt/solr/{{ template "solr.cloud-name" . }}/security.json > /tmp/security.json \
       && \
       # Create path
       /opt/solr/server/scripts/cloud-scripts/zkcli.sh -cmd makepath ${ZKPATH} -zkhost ${ZK_HOST} \
       && \
       # Upload security.json and solr.xml
       /opt/solr/server/scripts/cloud-scripts/zkcli.sh -cmd putfile ${ZKPATH}/solr.xml /opt/solr/server/solr/solr.xml -zkhost ${ZK_HOST} \
       && \
       /opt/solr/server/scripts/cloud-scripts/zkcli.sh -cmd putfile ${ZKPATH}/security.json /tmp/security.json  -zkhost ${ZK_HOST} \
   )

   # define hostname for solr
   export SOLR_HOST="`uname -n | fgrep -f - /etc/hosts | awk '{print $2}' | cut -d'.' -f1-3`"

   # and OPTS
   export SOLR_OPTS="$SOLR_OPTS $SOLR_ZK_CREDS_AND_ACLS -Dsolr.solr.instname=${SOLR_INSTNAME}"

   # start solr
   exec solr start -c -zkhost ${ZK_HOST}${ZKPATH} -f
---